public int getHeight(TreeNode root) {
        if (root == null) return 0;
        int leftHeight = getHeight(root.left);
        //wall
        int rightHeight = getHeight(root. right);
        //do sth
        return Math.max (leftHeight, rightHeight) + 1;
        
    }
    
 public int getHeiht(TreeNode root){
      if(root == null) return 0;
      int leftHeight = getHeight(root.left);
      //wall
      int rightHeight = getHeight(root. right);
      //do sth
      return Math.Min(leftHeight, rightHeight) + 1;
          
    
 }
    if (left == 0)return right + 1;
    if(right == 0) return left + 1;
    return Math.min(left,right) +1;
    
}    

balanced binary tree
public boolean isBalance(TreeNoderoot){
        if(root == null ) return true;
        int leftHeight = getHeight(root.left);
        int rightHeight = getHeight(root.right);
        
        return Math.abs(leftHeight-rightHeight) < = 1 && isBalance(root.left) && isBalance(riit.right);
        }
